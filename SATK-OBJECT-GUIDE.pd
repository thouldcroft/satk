#N canvas 127 38 1126 916 12;
#X obj 1 -361 cnv 15 1097 31 empty empty SOUND\ ART\ TOOLKIT\ MODULE\ GUIDE 20 12 0 14 #e0e0e0 #404040 0;
#X obj 1 -281 cnv 8 1100 8 empty empty Input-Signals 20 24 0 24 #e0e0e0 #404040 0;
#X obj 1 696 cnv 8 1100 8 empty empty Signal\ Processors 20 24 0 24 #e0e0e0 #404040 0;
#X obj 1 1713 cnv 8 1100 8 empty empty Utilities 20 24 0 24 #e0e0e0 #404040 0;
#X text 1097 2508 _;
#X obj 362 818 satk.sigproc.delay~;
#A saved 0 0 0 0 0 0 0;
#X obj 27 1254 satk.util.adsr~;
#X obj 275 2170 satk.util.audioout~;
#X text 14 2322 satk.util.record~;
#X obj 787 1839 satk.util.scope~;
#X obj 16 1396 satk.seq.gesture;
#X text 319 1676 satk.seq.gesture;
#X text 272 2323 satk.util.audioOut~;
#X text 41 979 satk.sigproc.mmfilt~;
#X text 362 981 satk.sigproc.delay~;
#X text 211 157 satk.util.audiofile~;
#X text 281 1251 satk.util.adsr~;
#X text 186 2136 satk.util.spectrograph~;
#X text 837 2064 satk.util.scope~;
#X obj 22 -154 satk.util.audioin~;
#X obj 23 -168 cnv 5 1000 2 empty empty External\ Input\ and\ Soundfile\ Playback 0 -6 0 14 #dfdfdf #404040 0;
#X text 20 -227 Sound experiments need to start with \, well \, sound! That sound typically comes from one of 3 places - live microphone input (or input from another piece of software) \, the playback of a pre-recorded sound as a sound file \, or synthesized sound., f 151;
#X text 20 3 satk.util.audioIn~;
#X obj 23 202 cnv 5 1000 2 empty empty Sound\ Synthesizers 0 -6 0 14 #dfdfdf #404040 0;
#X obj 1 1123 cnv 8 1100 8 empty empty Parameter\ Control\ and\ Sequencing 20 24 0 24 #e0e0e0 #404040 0;
#X text 18 760 A common approach to developing interesting sounds is to process that sound in some capacity. This ranges rom creating echo (delay) or modifying the spectrum (Multi-Mode Filter) \, to adjusting the volume (Channel Strip). While these options are relatively standard tools in a sound studio or software \, the modules can be combined and creatively routed here to produce more experimental results!, f 153;
#X text 21 1180 Some interesting results can be produced \, when the parameters of the modules are changed as the sounds are heard. This can range from adjusting the volume of a signal while it plays (i.e. fading) \, to adjusting delay time. With so many so many parameters \, actively shaping the sounds is difficult when you only have 1 mouse cursor to control the parameters. Fortunately \, all parameter modules in the SATK can be externally controlled. You can control a single parameter with the ADSR module \, you can control multiple modules with the Gesture module \, and you can sequence a series of module parameters using the Sequence module., f 153;
#X text 15 1763 Sometimes you need tools that \, while they may not significantly change the sound you are producing \, can be extremely helpful in developing your sounds. Spectrograph and Oscilloscopes help you see the spectral and waveform aspects of your sound \, the Sound Recorder allows you to document your sounds \, and the Audio Output module sends audio out to your soundcard and speakers., f 153;
#X obj 374 1318 satk.seq.stepsequencer;
#X obj 171 -157 satk.util.audioFile~;
#X obj 36 240 satk.synth.1oscil~;
#A saved 0 4 261.626 0 0 0 0 0;
#X obj 43 824 satk.sigproc.mmfilt~;
#X obj 13 2169 satk.util.recorder~;
#X text 641 1624 satk.seq.stepSequencer;
#X obj 706 2116 satk.util.channelstripMn~;
#X obj 898 2119 satk.util.channelstripSt~;
#X text 651 2423 satk.util.channelstripMn~, f 27;
#X text 875 2423 satk.util.channelstripSt~, f 27;
#X text 11 -328 (c) 2024 Travis Houldcroft / thouldcroft@gmail.com / houldcroftt@easternct.edu / travishouldcroft.com, f 105;
#X text 11 -306 Ver 0.6;
#X obj 18 1834 satk.util.spectrum~;
